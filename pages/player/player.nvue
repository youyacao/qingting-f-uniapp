<template>
	<div>
		<oxeVideo ref='video' isLive=false :style='boxStyle' :initVideoData='vData'></oxeVideo>
	</div>
</template>

<script>
	import {
		mapGetters
	} from 'vuex'
	import {historyAdd,historyList} from "@/js_sdk/video.js"

	export default {
		data() {
			return {
				boxStyle: {
					'height': 250,
					'width': '750upx',
				},
				index:0,
				duration:0,
				vData: {
					selectAutoPlay: true, //选集点击是否自动播放 默认自动播放
					forceDeviceOrientation: false, //旋转方向 true 全屏视频不旋转
					radius: 5, //圆角大小 默认 0 没有圆角
					showBack: true, //返回按钮是否显示小屏幕
					showSelect: true, //选集按钮是否显示
					showSpeed: true, //倍速按钮是否显示
					showShot: true, //截图按钮是否显示
					showDlna: {
						small: true,
						full: true
					}, //投屏按钮是否显示
					showDunmaku: {
						small: true,
						full: true
					}, //弹幕按钮是否显示
					showMore: {
						small: true,
						full: true
					}, //跟多按钮是否显示
					showBottomProcess: true,
					autoPlay: true, //默认false
					openCache: true, //是否开启缓存
					styles: [],
					hideControl: false, //是否隐藏所有控件
					backgroundHolder: '', //视频背景图片
					backgroundAlpha: 0.3, //0 背景透明度
					loop: false, //是否单急循环
					index: 0,
					data: []
				}
			}
		},
		computed:{
			...mapGetters(["userInfo","video","playlist"])
		},
		onLoad(options) {
			this.index = parseInt(options.index)
			this.wWidth = uni.getSystemInfoSync().windowWidth;
			this.boxStyle.width = this.wWidth;
		},
		onShow() {
			if(this.video && this.playlist){
				var data = []
				
				this.playlist.forEach((item,index)=>{
					data.push({
						title:this.video.title + '-' + item.title,
						index:item.title,
						thumb:item.thumb,
						url:item.url
					})
				})
				this.vData.index = this.index
				this.vData.data = data
				this.getHistoryRecord()
				//console.log(data)
			}
		},
		onReady() {
			//事件监听
			//0 小屏状态下返回按钮点击 
			//1 播放进度实时返回position 
			//2 视频广告点击事件
			//3 暂停广告点击事件
			//4 vip点击返回 
			//5 弹幕开启状态 
			//6 播放 
			//7 暂停 
			//8 缓冲返回 
			//9 网络错误 
			//10 钢笔图标点击
			//11 选集点击事件
			//12 广告详情按钮点击
			//13 大小屏切换事件
			//14 广告划过事件
			//15 广告倒计时点击事件
			//16 播放结束
			var globalEvent = weex.requireModule('globalEvent');
			var ox = this.$refs.video;
			//直接进入全屏播放
			ox.enterFullScreen()

			///注意  initVideoData初始化可在 组件中添加 或在 onReady里添加 只能选择一种 数据格式一样
			//ox.initVideoData(data);

			globalEvent.addEventListener("actionCallback", (e) => {
				
				let code = e.code;
				if (code == 0) {

				} else if (code == 1) {
					this.duration = e.position
					
				} else if (code == 7) {
					this.savePlayDuration()
				}  else if (code == 10) {

				} else if (code == 11) {
					console.log(e)
				} else if (code == 13) {
					this.savePlayDuration()
					//当退出全屏，则同时退出这个页面
					uni.navigateBack({
						delta:1
					})
				} else if (code == 14) {
					
				} else if (code == 3) {
					
				}else{
					
				}
			})

		},
		methods: {
			getHistoryRecord(){
				var movie = this.video
				if(movie && movie.history){
					this.playlist.forEach((item,index)=>{
						//console.log(movie.history.movie_id,item)
						if(movie.history.movie_detail_id == item.id){
							setTimeout(()=>{
								//this.playIndex(index)
								this.seekTo(movie.history.second * 1000)
							},1000)
							
							//console.log(movie.history.second)
						}
					})
				}
				
			},
			savePlayDuration(){
				//保存播放记录
				var ox = this.$refs.video;
				var movie = this.video
				var play_video = this.playlist[this.index]
				let duration = this.duration;
				//historyAdd
				historyAdd({
					movie_id:movie.id,
					movie_detail_id:play_video.id,
					second:duration/1000
				})
				//console.log(duration/1000)
			},
			showVipView: function() {
				var ox = this.$refs.video;
				ox.showVipView();
				//vip显示
			},
			hideVipView: function() {
				var ox = this.$refs.video;
				ox.hideVipView();
				//vip隐藏
			},
			addComponent: function() {
				var ox = this.$refs.video;
				ox.addComponent(component);
				//动态添加控件 code不能重复
			},
			updateComponent: function() {
				var ox = this.$refs.video;
				ox.updateComponent(component);
				//动态更新控件 更新的控件 code一定要对应
			},
			updateDataAtIndex: function(index,data) {
				var ox = this.$refs.video;
				ox.updateDataAtIndex({
					index: index,
					data: data
				});
				//更新索引位置视频数据
				ox.playIndex(1);
			},
			updateAll: function(data) {
				var ox = this.$refs.video;
				ox.updateAll({
					data: data
				});
				setTimeout(function() {
					ox.playIndex(0);
				}, 500)
				//更新所有视频数据

			},
			seekTo: function(value) {
				var ox = this.$refs.video;
				ox.seekTo(value);
				//滑动到指定时间播放毫秒
			},
			setSpeed: function(speed) {
				var ox = this.$refs.video;
				ox.setSpeed(speed);
				//设置倍数
			},
			setVolume: function(value) {
				var ox = this.$refs.video;
				ox.setVolume(value);
				//设置声音
			},
			setMuted: function() {
				var ox = this.$refs.video;
				ox.setMuted(true);
				//是否静音
			},
			clearCache: function() {
				var ox = this.$refs.video;
				ox.clearCache();
				//清理缓存
			},
			next: function() {
				var ox = this.$refs.video;
				ox.next();
				//播放下一条记录
			},
			prev: function() {
				var ox = this.$refs.video;
				ox.prev();
				//播放上一条记录
			},
			playIndex: function(value) {
				var ox = this.$refs.video;
				ox.playIndex(value);
				//播放索引记录
			},
			start: function() {
				var ox = this.$refs.video;
				ox.start();
				//开始播放
			},
			pause: function() {
				var ox = this.$refs.video;
				ox.pause();
				//暂停播放
			},
			replay: function() {
				var ox = this.$refs.video;
				ox.replay();
				//循环播放
			},
			remove: function() {
				var ox = this.$refs.video;
				ox.remove();
				//去除播放器
			},
			hidePlay: function() {
				var ox = this.$refs.video;
				ox.hidePlay();
				//隐藏播放器
			},
			showPlay: function() {
				var ox = this.$refs.video;
				ox.showPlay();
				//显示播放器
			},
			enterFullScreen: function() {
				var ox = this.$refs.video;
				ox.enterFullScreen();
				//进入全屏
			},
			exitFullScreen: function() {
				var ox = this.$refs.video;
				ox.exitFullScreen();
				//退出全屏
			},
			isFull: function() {
				var ox = this.$refs.video;
				ox.isFull(result => {
					let isFull = result.isFull;
					uni.showModal({
						title: '提示',
						content: '是否全屏:' + isFull,
						success: function(res) {

						}
					});
				});
				//是否全屏
			},
			getSpeed: function() {
				var ox = this.$refs.video;
				ox.getSpeed(result => {
					let speed = result.speed;
					uni.showModal({
						title: '提示',
						content: '倍速:' + speed,
						success: function(res) {

						}
					});
				});
				//获取倍速
			},
			addDanmaku: function() {
				var ox = this.$refs.video;
				ox.addDanmaku({
					text: '测试',
					isSelf: true
				});
				//单条弹幕发送
			},
			addDanmakus: function() {
				var ox = this.$refs.video;
				ox.addDanmakus([{
					text: '测试',
					isSelf: true,
					color: '#FFFFFF'
				}]);
				//多条弹幕发送
			},
			closeDanmaku: function() {
				var ox = this.$refs.video;
				ox.closeDanmaku();
				//关闭弹幕
			},
			openDanmaku: function() {
				var ox = this.$refs.video;
				ox.openDanmaku();
				//开启弹幕
			},
			getDuration: function() {
				var ox = this.$refs.video;
				ox.duration(result => {
					let duration = result.duration;
					uni.showModal({
						title: '时长',
						content: JSON.stringify(result),
						success: function(res) {
							if (res.confirm) {
								console.log('用户点击确定');
							} else if (res.cancel) {
								console.log('用户点击取消');
							}
						}
					});
				});
				//获取视频时长 毫秒

			},
			
			getScreenShot: function() {
				var ox = this.$refs.video;
				ox.screenShot(result => {
					let base64 = result.base64;
				});
				//截图 返回base64
			},
			adSkip: function() {
				var ox = this.$refs.video;
				ox.adSkip();
				//划过广告
			},
			setOptionValue: function() {
				var ox = this.$refs.video;
				ox.setOptionValue({value:'',key:'',category:1});
				//ijk设置 option category 1 FormatOption 2 CodecOption 3 SwsOption 4 PlayerOption
			},
			setOptionIntValue: function() {
				var ox = this.$refs.video;
				ox.setOptionIntValue({value:0,key:'',category:1});
				//ijk设置 option category 1 FormatOption 2 CodecOption 3 SwsOption 4 PlayerOption
			},
			setScreenScaleType: function() {
				var ox = this.$refs.video;
				ox.setScreenScaleType(1);
				//设置视频画面 适应 1 2 3
			}
		}
	};
</script>
<style>

</style>
