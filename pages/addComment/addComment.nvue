<template>
	<view>
		<view class="input-area">
			<textarea v-model="formData.content" placeholder="评电影,好比评人生" class="input-box" :maxlength="2000"></textarea>
		</view>
		<view class="image-box">
			<view class="image-item" v-for="(image,index) in imageList" :key="index">
				<image class="image-style" mode="aspectFill" :src="image"></image>
				<text class="icon-font delete-btn" @click="onDeleteImage(index)">&#xe638;</text>
			</view>
			<view class="add-image" @click="onAddimages()" v-if="imageList.length<9">
				<text class="icon-font add-text">&#xe620;</text>
			</view>
		</view>
	</view>
</template>

<script>
	import {uploadImage,addComment} from "@/js_sdk/video.js"
	export default {
		data() {
			return {
				imageList:[],
				uploadedCount:0,
				formData:{
					type:3,
					oid:null,
					content:"",
					images:[]
				}
			}
		},
		onLoad(op) {
			this.formData.oid = op.vid
		},
		onNavigationBarButtonTap() {
			this.onSubmit()
		},
		methods: {
			onAddimages(){
				uni.chooseImage({
					count:9 - this.imageList.length,
					success: (res) => {
						this.imageList = this.imageList.concat(res.tempFilePaths)
					}
				})
			},
			onDeleteImage(index){
				this.imageList.splice(index,1)
			},
			uploadImages(index){
				uni.showLoading({
					title:"正在上传图片",
					mask:true
				})
				var file = this.imageList[index]
				uploadImage({
					filePath:file
				}).then(res=>{
					//console.log(res)
					this.uploadedCount++
					this.formData.images.push(res.data.img_url)
					if(this.uploadedCount == this.imageList.length){
						this.doPublish()
					}else{
						this.uploadImages(++index)
					}
				}).catch(error=>{
					this.uploadedCount++
					if(this.uploadedCount == this.imageList.length){
						this.doPublish()
					}else{
						this.uploadImages(++index)
					}
					console.log(error)
				})
			},
			onSubmit(){
				uni.hideKeyboard()
				if(!this.formData.content){
					uni.showToast({
						icon:"none",
						title:"请填写影评内容"
					})
					return
				}
				uni.showLoading({
					title:"正在发布",
					mask:true
				})
				if(this.imageList.length){
					this.formData.images = []
					this.uploadedCount = 0
					this.uploadImages(0)
				}else{
					this.doPublish()
				}
			},
			doPublish(){
				addComment(this.formData).then(res=>{
					uni.hideLoading()
					uni.showModal({
						title:"提示",
						showCancel:false,
						content:"影评发布成功",
						success: () => {
							uni.navigateBack({
								delta:1
							})
						}
					})
				}).catch(error=>{
					uni.hideLoading()
					console.log(error)
				})
				
			}
		}
	}
</script>

<style lang="scss" scoped>
.input-area{
	padding: 20rpx;
}
.input-box{
	font-size: $uni-font-size-base;
	color: #FFFFFF;
	padding: 12rpx 0rpx;
}
.image-box{
	padding: 20rpx;
	flex-direction: row;
	flex-wrap: wrap;
}
.add-image{
	width: 218rpx;
	height: 120rpx;
	background-color: #232323;
	margin: 10rpx;
	border-radius: 10rpx;
	border-width: 1px;
	border-color: #555555;
	justify-content: center;
	align-items: center;
}
.add-text{
	font-size: 40rpx;
	color: #C0C0C0;
}
.image-item{
	width: 218rpx;
	height: 120rpx;
	margin: 10rpx;
}
.image-style{
	width: 218rpx;
	height: 120rpx;
	border-radius: 10rpx;
}
.delete-btn{
	position: absolute;
	right: 0rpx;
	top: 0rpx;
	border-radius: 40rpx;
	width: 40rpx;
	height: 40rpx;
	font-size: 20rpx;
	text-align: center;
	line-height: 40rpx;
	background-color: rgba(0,0,0,0.7);
	color: #FFFFFF;
}
</style>
